var tipuesearch = {"pages":[{"tags":"規劃","text":"個人網際內容管理 CMSimply 內容管理系統 Pelican 靜態網址 WordPress 動態網誌","title":"admin-網際內容管理","url":"./admin-wang-ji-nei-rong-guan-li.html"},{"tags":"規劃","text":"手冊類別分為 OnShape, Solvespace, FreeCAD, Elmer, V-rep 以及 Jupyter, 加上範例, 編寫模式與架構則透過 Leo Editor, Pelican, 與 Github pull requests 完成. http://cad-lab.github.io/manual","title":"template-啟動電腦輔助機械設計手冊編輯","url":"./template-qi-dong-dian-nao-fu-zhu-ji-jie-she-ji-shou-ce-bian-ji.html"},{"tags":"Uncategorized","text":"以下為使用snap.svg執行網頁繪圖範例 //<!-- window.onload=function(){brython(1);} //--> #<!-- from javascript import JSConstructor from browser import alert from browser import window, document # 透過 window 與 JSConstructor 從 Brython 物件 snap 擷取 Snap 物件的內容 snap = JSConstructor(window.Snap) # 使用 id 為 \"svgout\" 的 svg 標註進行繪圖 s = snap(\"#svgout\") offsetY = 50 # 是否標示出繪圖範圍 #borderRect = s.rect(0,0,800,640,10,10).attr({ 'stroke': \"silver\", 'fill': \"silver\", 'strokeWidth': \"3\" }) g = s.group().transform('t250,120') r0 = s.rect(150,150,100,100,20,20).attr({ 'fill': \"orange\", 'opacity': \"0.8\", 'stroke': \"black\", 'strokeWidth': \"2\" }) c0 = s.circle(225,225,10).attr({ 'fill': \"silver\", 'stroke': \"black\", 'strokeWidth': \"4\" }).attr({ 'id': 'c0' }) g0 = s.group( r0,c0 ).attr({ 'id': 'g0' }) #g0.animate({ 'transform' : 't250,120r360,225,225' },4000) g0.appendTo( g ) g0.animate({ 'transform' : 'r360,225,225' },4000) # 讓 g0 可以拖動 g0.drag() r1 = s.rect(100,100,100,100,20,20).attr({ 'fill': \"red\", 'opacity': \"0.8\", 'stroke': \"black\", 'strokeWidth': \"2\" }) c1 = s.circle(175,175,10).attr({ 'fill': \"silver\", 'stroke': \"black\" , 'strokeWidth': \"4\"}).attr({ 'id': 'c1' }) g1 = s.group( r1,c1 ).attr({ 'id': 'g1' }) g1.appendTo( g0 ).attr({ 'id': 'g1' }) g1.animate({ 'transform' : 'r360,175,175' },4000) r2 = s.rect(50,50,100,100,20,20).attr({ 'fill': \"blue\", 'opacity': \"0.8\", 'stroke': \"black\", 'strokeWidth': \"2\" }) c2 = s.circle(125,125,10).attr({ 'fill': \"silver\", 'stroke': \"black\", 'strokeWidth': \"4\" }).attr({ 'id': 'c2' }) g2 = s.group(r2,c2).attr({ 'id': 'g2' }) g2.appendTo( g1 ); g2.animate( { 'transform' : 'r360,125,125' },4000); r3 = s.rect(0,0,100,100,20,20).attr({ 'fill': \"yellow\", 'opacity': \"0.8\", 'stroke': \"black\", 'strokeWidth': \"2\" }) c3 = s.circle(75,75,10).attr({ 'fill': \"silver\", 'stroke': \"black\", 'strokeWidth': \"4\" }).attr({ 'id': 'c3' }) g3 = s.group(r3,c3).attr({ 'id': 'g3' }) g3.appendTo( g2 ) g3.animate( { 'transform' : 'r360,75,75' },4000) r4 = s.rect(-50,-50,100,100,20,20).attr({ 'fill': \"green\", 'opacity': \"0.8\", 'stroke': \"black\", 'strokeWidth': \"2\" }) c4 = s.circle(25,25,10).attr({ 'fill': \"silver\", 'stroke': \"black\", 'strokeWidth': \"4\" }).attr({ 'id': 'c4' }) g4 = s.group(r4,c4).attr({ 'id': 'g4' }); g4.appendTo( g3 ) g4.animate( { 'transform' : 'r360,25,25' },4000) #--> #<!!-- from javascript import JSConstructor from browser import alert from browser import window, document # 透過 window 與 JSConstructor 從 Brython 物件 snap 擷取 Snap 物件的內容 snap = JSConstructor(window.Snap) s = snap(\"#svgout1\") # 建立物件時, 同時設定 id 名稱 r = s.rect(10,10,100,100).attr({'id': 'rect'}) c = s.circle(100,100,50).attr({'id': 'circle'}) r.attr('fill', 'red') c.attr({ 'fill': 'blue', 'stroke': 'black', 'strokeWidth': 10 }) r.attr({ 'stroke': '#123456', 'strokeWidth': 20 }) s.text(180,100, '點按一下圖形').attr({'fill' : 'blue', 'stroke': 'blue', 'stroke-width': 0.2 }) g = s.group().attr({'id': 'tux'}) def hoverover(ev): g.animate({'transform': 's1.5r45,t180,20'}, 1000, window.mina.bounce) def hoverout(ev): g.animate({'transform': 's1r0,t180,20'}, 1000, window.mina.bounce) # callback 函式 def onSVGLoaded(data): #s.append(data) g.append(data) #g.hover(hoverover, hoverout ) g.text(300,100, '將滑鼠指向企鵝') # 利用 window.Snap.load 載入 svg 檔案 tux = window.Snap.load(\"http://chiamingyen.github.io/kmolab_data/files/Dreaming_tux.svg\", onSVGLoaded) g.transform('t180,20') # 與視窗事件對應的函式 def rtoyellow(ev): r.attr('fill', 'yellow') def ctogreen(ev): c.attr('fill', 'green') # 根據物件 id 綁定滑鼠事件執行對應函式 document['rect'].bind('click', rtoyellow) document['circle'].bind('click', ctogreen) document['tux'].bind('mouseover', hoverover) document['tux'].bind('mouseleave', hoverout) #-->","title":"admin-snap.svg 繪圖範例","url":"./admin-snapsvg-hui-tu-fan-li.html"},{"tags":"Uncategorized","text":"40423116-期中報告 CMSimply 內容管理系統 Pelican 靜態網址 WordPress 動態網誌 1.網路線製作流程紀錄，至少完成一條568B網路線及一條跳線並拍攝測試成功過程影片 跳腺測試 from 40423116 on Vimeo . 網路線測試 from 40423116 on Vimeo . 2.認領一段系上網路配置，完成實體拍照上傳，完成網路配置繪圖，網路線查驗替換及執行過程討論 實體拍照 3.完成樹莓派3 B型的虛擬規劃與cadlab中的應用流程介紹 4.利用三個按鈕將上述內容在python與WordPress的的中以同步處理 WordPress 動態網誌 按鈕 from 40423116 on Vimeo .","title":"40423116-期中報告","url":"./40423116-qi-zhong-bao-gao.html"},{"tags":"Python","text":"用user9999的好處: 用最新版本的user 9999的好處 from 40423116 on Vimeo .","title":"關於user9999版本","url":"./2015cp_hw_w19.html"},{"tags":"Python","text":"以下為故事內容","title":"2015-Leo小勇士","url":"./2015cp_hw_w18.html"},{"tags":"Python","text":"以下為作業17內容內容 在網際頁面上, 用 Python 執行動態模擬!: window.onload=function(){ brython(1); } # 導入 browser 模組中的 document, 並設為 doc 變數 from browser import document as doc # 導入數學模組 import math # 產生各小球的亂數速度用 import random # 導入 browser 中的計時器, 建立動畫用 import browser.timer # 準備繪圖畫布 canvas = doc[\"plotarea\"] ctx = canvas.getContext(\"2d\") # 取畫布的寬與高度 width = canvas.width height = canvas.height n = 100 # 已知數列內容個數, 先分別與 None 對應 x = [None]*n y = [None]*n vy = [None]*n vx = [None]*n # 重力加速度, Y 方向向下為正 g = 0.05 # 空氣的黏滯阻尼係數 cor = 0.7 # 球的彈力係數 fr = 0.95 # 球的半徑 r = 5 for i in range(n): x[i] = 300 y[i] = 100 # random.random() 將會產生介於 0 與 1 的浮點亂數 vx[i] = 2*(random.random()-.5) vy[i] = 2*(random.random()-.5) # 更新第 i 球 Y 座標的運算邏輯 def updateY(i): if ((y[i]+r) < height): #y = height vy[i] += g else: vy[i] = -vy[i]*cor vx[i] *= fr y[i] += vy[i] if ((y[i]+r) > height): y[i] = height-r # 更新第 i 球 X 座標的運算邏輯 def updateX(i): if ((x[i]+r) >= width or (x[i]-r) <= 0): vx[i] = -vx[i]*cor x[i] += vx[i] if ((x[i]+r) > width): x[i] = width-r elif ((x[i]-r) < 0): x[i] = r # 畫圓函式 def circle(x,y,r): ctx.beginPath() ctx.arc(x, y, r, 0, math.pi*2, True) ctx.fill() # 寫字函式 def text(s): ctx.fillStyle = \"#ff0000\" ctx.font = \"30px sans-serif\" ctx.textBaseline = \"bottom\" ctx.fillText(s,0,height) # 每隔特定時間, 進行動畫繪製 def animate(): # 刷新畫布 ctx.clearRect(0, 0, width, height) # 逐一重新繪製小球 ctx.fillStyle = \"#000000\" for i in range(n): updateY(i) updateX(i) circle(x[i],y[i],r) text(\"Click me!\") # 畫布點擊後執行的函式 def on_canvas_click(ev): browser.timer.set_interval(animate,0) # 只要使用者點擊在畫布上任何地方, 即執行 on_canvas_click 函式 canvas.bind('click', on_canvas_click, False) 程式碼: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 < ! -- 導入 brython . js --> < script type = \"text/javascript\" src = \"http://brython.info/src/brython_dist.js\" ></ script > < ! -- 啟動 brython () --> < script > window . onload = function (){ brython ( 1 ); } </ script > < ! -- 以下利用 Brython 程式執行繪圖 --> < canvas id = \"plotarea\" width = \"600\" height = \"400\" ></ canvas > < script type = \"text/python3\" > # 導入 browser 模組中的 document, 並設為 doc 變數 from browser import document as doc # 導入數學模組 import math # 產生各小球的亂數速度用 import random # 導入 browser 中的計時器, 建立動畫用 import browser.timer # 準備繪圖畫布 canvas = doc [ \"plotarea\" ] ctx = canvas . getContext ( \"2d\" ) # 取畫布的寬與高度 width = canvas . width height = canvas . height n = 100 # 已知數列內容個數, 先分別與 None 對應 x = [ None ] * n y = [ None ] * n vy = [ None ] * n vx = [ None ] * n # 重力加速度, Y 方向向下為正 g = 0.05 # 空氣的黏滯阻尼係數 cor = 0.7 # 球的彈力係數 fr = 0.95 # 球的半徑 r = 5 for i in range ( n ): x [ i ] = 300 y [ i ] = 100 # random.random() 將會產生介於 0 與 1 的浮點亂數 vx [ i ] = 2 * ( random . random () -. 5 ) vy [ i ] = 2 * ( random . random () -. 5 ) # 更新第 i 球 Y 座標的運算邏輯 def updateY ( i ): if (( y [ i ] + r ) < height ): #y = height vy [ i ] += g else : vy [ i ] = - vy [ i ] * cor vx [ i ] *= fr y [ i ] += vy [ i ] if (( y [ i ] + r ) > height ): y [ i ] = height - r # 更新第 i 球 X 座標的運算邏輯 def updateX ( i ): if (( x [ i ] + r ) >= width or ( x [ i ] - r ) <= 0 ): vx [ i ] = - vx [ i ] * cor x [ i ] += vx [ i ] if (( x [ i ] + r ) > width ): x [ i ] = width - r elif (( x [ i ] - r ) < 0 ): x [ i ] = r # 畫圓函式 def circle ( x , y , r ): ctx . beginPath () ctx . arc ( x , y , r , 0 , math . pi * 2 , True ) ctx . fill () # 寫字函式 def text ( s ): ctx . fillStyle = \"#ff0000\" ctx . font = \"30px sans-serif\" ctx . textBaseline = \"bottom\" ctx . fillText ( s , 0 , height ) # 每隔特定時間, 進行動畫繪製 def animate (): # 刷新畫布 ctx . clearRect ( 0 , 0 , width , height ) # 逐一重新繪製小球 ctx . fillStyle = \"#000000\" for i in range ( n ): updateY ( i ) updateX ( i ) circle ( x [ i ], y [ i ], r ) text ( \"Click me!\" ) # 畫布點擊後執行的函式 def on_canvas_click ( ev ): browser . timer . set_interval ( animate , 0 ) # 只要使用者點擊在畫布上任何地方, 即執行 on_canvas_click 函式 canvas . bind ( 'click' , on_canvas_click , False ) </ script > 這學期心得 from 40423116 on Vimeo .","title":"2015 計算機程式 w17","url":"./2015cp_hw_w17.html"},{"tags":"Python","text":"以下為作業15內容內容 40423116-聖誕禮物 window.onload=function(){ brython(1); } # 導入 doc from browser import document as doc from browser import console import math # 準備繪圖畫布 canvas = doc[\"plotarea\"] ctx = canvas.getContext(\"2d\") # 開始畫直線 ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(10, 250) ctx.lineTo(240, 250) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(240, 250) ctx.lineTo(240, 330) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(240, 330) ctx.lineTo(10, 330) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(10, 330) ctx.lineTo(10, 250) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(30, 330) ctx.lineTo(30, 490) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(30, 490) ctx.lineTo(220, 490) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(220, 490) ctx.lineTo(220, 330) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(260, 250) ctx.lineTo(490, 250) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(490, 250) ctx.lineTo(490, 330) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(490, 330) ctx.lineTo(260, 330) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(260, 330) ctx.lineTo(260, 250) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(280, 330) ctx.lineTo(280, 490) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(280, 490) ctx.lineTo(470, 490) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(470, 490) ctx.lineTo(470, 330) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(135, 10) ctx.lineTo(365, 10) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(365, 10) ctx.lineTo(365, 90) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(365, 90) ctx.lineTo(135, 90) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(135, 90) ctx.lineTo(135, 10) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(155, 90) ctx.lineTo(155, 250) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(155, 250) ctx.lineTo(345, 250) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(345, 250) ctx.lineTo(345, 90) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 50 ctx.moveTo(125, 495) ctx.lineTo(125, 245) ctx.strokeStyle = \"#00FFFF\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 50 ctx.moveTo(375, 495) ctx.lineTo(375, 245) ctx.strokeStyle = \"#00FFFF\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 50 ctx.moveTo(250, 255) ctx.lineTo(250, 5) ctx.strokeStyle = \"#00FFFF\" ctx.stroke() 畫圖 from 40423116 on Vimeo .","title":"2015 計算機程式 w15","url":"./2015cp_hw_w15.html"},{"tags":"Python","text":"以下為作業14內容內容 以下利用 Brython 在網頁寫 Python 繪圖 window.onload=function(){ brython(1); } # 導入 doc from browser import document as doc from browser import console import math # 準備繪圖畫布 canvas = doc[\"plotarea\"] ctx = canvas.getContext(\"2d\") # 開始畫直線 ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(0, 0) ctx.lineTo(500, 500) ctx.strokeStyle = \"#FF0000\" ctx.stroke() ctx.beginPath() ctx.lineWidth = 10 ctx.moveTo(0, 500) ctx.lineTo(500, 0) ctx.strokeStyle = \"#0000ff\" ctx.stroke() 上列繪圖的程式碼: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <!-- 導入 brython.js --> <script type= \"text/javascript\" src= \"js/Brython3.2.3-20151122-082712/brython.js\" ></script> <!-- 啟動 brython() --> <script> window . onload = function (){ brython ( 1 ); } </script> <!-- 以下利用 Brython 程式執行繪圖 --> <canvas id= \"plotarea\" width= \"300\" height= \"200\" ></canvas> <script type= \"text/python3\" > # 導入 doc from browser import document as doc from browser import console import math # 準備繪圖畫布 canvas = doc [ \"plotarea\" ] ctx = canvas . getContext ( \"2d\" ) # 開始畫直線 ctx . beginPath () ctx . lineWidth = 5 ctx . moveTo ( 0 , 0 ) ctx . lineTo ( 100 , 100 ) ctx . strokeStyle = \"#FF0000\" ctx . stroke () ctx . beginPath () ctx . lineWidth = 5 ctx . moveTo ( 100 , 0 ) ctx . lineTo ( 0 , 100 ) ctx . strokeStyle = \"#0000ff\" ctx . stroke () x = 100 y = 100 # 利用 browser 模組中的 console . log 將資料列印在 console 區 , 可以用來確認程式中各變數的值 , 用法等同 print console . log ( \"x 值為\" + str ( x ) + \", y 值為\" + str ( y )) # 利用迴圈畫水平線 for i in range ( 5 ) : ctx . beginPath () ctx . lineWidth = 5 ctx . moveTo ( 0 , 10 + i * 20 ) ctx . lineTo ( 100 , 10 + i * 20 ) ctx . strokeStyle = \"#0000ff\" ctx . stroke () </script> </script>","title":"2015 計算機程式 w14","url":"./2015cp_hw_w14.html"},{"tags":"Python","text":"以下為作業13內容內容 List程式:抽點名 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 cpa_number=[' 40123227',' 40123237',' 40123256',' 40423101',' 40423103',' 40423104',' 40423105',' 40423106',' 40423107',' 40423108',' 40423109',' 40423110',' 40423111',' 40423112',' 40423113',' 40423114',' 40423115',' 40423116',' 40423117',' 40423118',' 40423119',' 40423120',' 40423121',' 40423122',' 40423123',' 40423124',' 40423125',' 40423126',' 40423127',' 40423128',' 40423129',' 40423130',' 40423131',' 40423132',' 40423133',' 40423134',' 40423135',' 40423136',' 40423137',' 40423138',' 40423139',' 40423140',' 40423141',' 40423142',' 40423143',' 40423144',' 40423145',' 40423146',' 40423147',' 40423148',' 40423149',' 40423150',' 40423152',' 40423153',' 40423154',' 40423155'] cpa_name=[' 紀培俞', ' 陳琨揚',' 蘇建瑋',' 曾宜萱',' 劉怡萱',' 顏暄',' 王奕智',' 王翔佑',' 史育澤',' 江心平',' 何宗哲',' 余浩鋼',' 吳承翰',' 吳欣奕',' 吳冠毅',' 李希凡',' 李尚瑋',' 李冠辰',' 李國豪',' 阮伯宗',' 周嘉原',' 林尚漢',' 林秉憲',' 林國蓁',' 林嘉文',' 林濬翔',' 邱弘承',' 紀均瀚',' 范展榕',' 徐聖倫',' 張俊鴻',' 張勝雄',' 許承恩',' 郭力維',' 郭政修',' 陳正凱',' 陳冠錡',' 陳柏維',' 陳慶豪',' 傅仁禹',' 曾繼緯',' 黃子晏',' 黃羿誠',' 黃興煜',' 楊智勝',' 葉宗翰',' 廖先博',' 廖祈安',' 劉孟璋',' 劉佑程',' 蔡悌仁',' 鄭邦宏',' 賴浚珅',' 簡登瑋',' 闕崇晉',' 蘇麒彬'] g2_number=['40423105','40423106','40423107','40423114','40423115','40423116'] g2_name=['王奕智','王翔佑','史育澤','李希凡','李尚瑋','李冠辰'] #第2組組員有多少，有哪些人? print('g2組員:', len(g2_number),'人') print('成員:') for i in range(len(g2_number)): print( g2_number[i], g2_name[i]) print('-----分隔-----') #班上幾個人? 抽點名點多少人? 抽到誰? print('班上有',len(cpa_number),'人') import random total_number=len(cpa_number) roll_number= int(input(\"抽點幾位?\")) for i in range(roll_number): check = random.randint(0,total_number -1) print(cpa_number[check],cpa_name[check]) list from 40423116 on Vimeo .","title":"2015 計算機程式 w13","url":"./2015cp_hw_w13.html"},{"tags":"Python","text":"以下為作業12內容內容 猜顏色 40423116 李冠辰 from 40423116 on Vimeo .","title":"2015 計算機程式 w12","url":"./2015cp_hw_w12.html"},{"tags":"Python","text":"以下為作業11內容內容 猜數字: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #coding: utf-8 #猜數字遊戲 import random 執行次數 = 100 總猜測次數 = 0 for i in range ( 執行次數 ): 下限 = 1 上限 = 100 標準答案 = random . randint ( 下限 , 上限 ) pc猜的數字 = random . randint ( 下限 , 上限 ) #print(標準答案, pc猜的數字) #integer #string #float #你猜的數字 = int(input(\"請輸入您所猜的整數:\")) 猜測次數 = 1 while 標準答案 != pc猜的數字 : if 標準答案 < pc猜的數字 : #print(\"太大了，再猜一次 :)加油\") # 因此已經確定\"pc猜的數字\"不是答案, 因此 - 1 上限 = pc猜的數字 - 1 else : #print(\"太小了，再猜一次 :)加油\") # 因此已經確定\"pc猜的數字\"不是答案, 因此 + 1 下限 = pc猜的數字 + 1 #pc猜的數字 = int(input(\"請輸入您所猜的整數:\")) pc猜的數字 = random . randint ( 下限 , 上限 ) 猜測次數 += 1 #print(\"猜對了！總共猜了\", 猜測次數, \"次\") 總猜測次數 += 猜測次數 平均猜測次數 = int ( 總猜測次數 / 執行次數 ) print ( \"平均次數\" , 平均猜測次數 ) 猜數字遊戲 from 40423116 on Vimeo .","title":"2015 計算機程式 w11","url":"./2015cp_hw_w11.html"},{"tags":"Python","text":"以下為期中報告內容 1.2015 Fall 課程工作與環境介紹 課程工作環境 from 40423116 on Vimeo . 2.2015 Fall 計算機程式可攜環境介紹 可攜式系統的介紹 from 40423116 on Vimeo . 3.說明如何利用 python -m http.server 分享近端檔案 利用python 分享近端檔案 from 40423116 on Vimeo . 4.介紹如何利用 fix.bat 修補 C 槽既有的可攜程式系統, 說明 SciTE 如何執行 Python3 程式, 如何建立 gh-pages 分支網頁及繳交作業 關於fix及建立gh-pages和繳交作業 from 40423116 on Vimeo . 5.Github 倉儲分支的刪除 Github 倉儲的刪除 from 40423116 on Vimeo . 6.介紹英文教學影片的字幕所在位置, 說明如利用 VLC 在近端播放教學影片 教學影片 vlc from 40423116 on Vimeo . 7.說明近端與 Jupyter 環境的 Python 程式執行, print 與 for 迴圈應用，並將計算機程式內容放到gh-pages 網頁 for迴圈應用 from 40423116 on Vimeo . 計算機內容送到gh-pages網頁上 from 40423116 on Vimeo . 8.說明如何利用 git reset -- hard 版本編號, 回復舊版本資料，及示範如何修正內含 git 衝突標示的 Leo Editor 檔案 回到舊版本 from 40423116 on Vimeo .","title":"2015 計算機程式w9 期中報告(1~8)","url":"./2015cp_hw_w1.html"}]};